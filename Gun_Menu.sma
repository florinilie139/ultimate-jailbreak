/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <fakemeta>

#if cellbits == 32
    #define OFFSET_CSMONEY  115
 #else
    #define OFFSET_CSMONEY  140
 #endif

//what guns on menu^^
new G_Size[2][4] ={{
		
		//Min Value
		0,
		16,
		26,
		30
		},{
		//Max Value
		15,
		20,
		29,
		31
	}
}


//last guns	Pcvars		maxplayers
new G_Last[33][4],P_Cvars[34],MaxPlayers

//Page and rebuy cost
new G_Info[2][33]
new Auto_Rebuy[33]

//price and names,other info etc
new Weapons_Price[33]
new Weapons_Info[3][33][22]

public plugin_init() 
{
	register_plugin("Gun Menu", "1.61", "Fxfighter")
	Load
	MaxPlayers = get_maxplayers()
	//Events
	register_event("ResetHUD","Spawn","be")
	register_event("DeathMsg", "Reset", "a")
	register_logevent("Reset", 2, "1=Round_End")
	register_event("TextMsg", "Reset", "a", "2=#Game_will_restart_in")
	register_clcmd("say /guns","Say")
	register_clcmd("say_team /guns","Say")
	
	//Register Cvars
	P_Cvars[32] = register_cvar("gunmenu","4",FCVAR_SERVER|FCVAR_UNLOGGED)
	P_Cvars[33] = register_cvar("gunmenu_time","2.0")
}

//load info
public Load()
{
	new lineNum   =  0,pointNum  = -1,filename[66],configLine[80],iLen,price[6],Name[30]
	get_configsdir(filename, 65)
	format(filename, 65, "%s/Gun_Menu.ini", filename)
	while(read_file(filename,lineNum++,configLine,79,iLen)) 
	{
		if (iLen > 0)
		{
			pointNum++
			parse(configLine, Weapons_Info[0][pointNum], 19, price, 5, Weapons_Info[1][pointNum], 21, Weapons_Info[2][pointNum], 21)
			
			Name = Weapons_Info[0][pointNum] 
			format(Name,29,"gunmenu_%s",Name)
			P_Cvars[pointNum] = register_cvar(Name,"1")
			Weapons_Price[pointNum] = str_to_num(price)
		}
	}
	return PLUGIN_CONTINUE
}

//open our menu after they spawned
public Spawn(id)
{
	//Dont bother showing....
	if(G_Info[0][id] != 0 || is_user_bot(id) || is_user_hltv(id) || get_pcvar_num(P_Cvars[32]) == 0)return
	G_Info[0][id] = 1
	new Float:Time=get_pcvar_float(P_Cvars[33])
	if(Auto_Rebuy[id])set_task(Time,"ReBuy",id)
	else set_task(Time,"Show_Menu",id)
}
public Say(id)
{
	if(!Auto_Rebuy[id])return
	client_print(id,print_chat,"[Gun Menu]Auto Rebuy Disabled")
	Auto_Rebuy[id] = 0
}
//show our menu
public Show_Menu(id)
{
	if(get_pcvar_num(P_Cvars[32]) == 4||get_pcvar_num(P_Cvars[32]) == get_user_team(id))
	{
		
		new menu = menu_create("\rGun Menu", "Menu_Handler")
		
		new nr[4],Name[26],i,Cost
		for (new i2=G_Size[0][G_Info[0][id]-1]; i2<=G_Size[1][G_Info[0][id]-1]; i2++)
		{
			i = i2
			if(get_pcvar_num(P_Cvars[i]) == 1)
			{	
				Cost = Weapons_Price[i]
				format(nr,3,"%i",i)
				if(!i)Cost += G_Info[1][id]
				if(!Cost)format(Name,25,"%s",Weapons_Info[0][i])
				else format(Name,25,"%s %i$",Weapons_Info[0][i], Cost)
				
				menu_additem(menu ,Name, nr , 0)
			}
		}
		menu_setprop(menu , MPROP_EXIT , MEXIT_ALL);
		menu_display(id , menu , 0)
		G_Info[0][id] +=1
	}
}

//gives guns+ammo
public Menu_Handler(id, menu, item)
{
	if(!is_user_alive(id))return
	if(item == MENU_EXIT)
	{
		menu_destroy(menu)
		
		new arg[2]
		read_argv(2,arg,1)
		if(arg[0] != 49)
		{
			G_Info[1][id] -= Weapons_Price[G_Last[id][G_Info[0][id]-2]]
			G_Last[id][G_Info[0][id]-2] = 0
			if(G_Info[0][id] != 5)Show_Menu(id)
		}
		return
	}
	
	new data[6], iName[22]
	new access, callback
	menu_item_getinfo(menu, item, access, data,5, iName, 21, callback)
	new key = str_to_num(data)
	
	if(Weapons_Info[1][key][7] == 'r')
	{
		ReBuy(id)
		if(Weapons_Info[1][key][12] == 52)Auto_Rebuy[id] = 1
		menu_destroy(menu)
		return
	}
	new Cash = get_pdata_int(id,OFFSET_CSMONEY,5)
	if(Cash >= Weapons_Price[key])
	{
		fm_set_user_money(id,Cash-Weapons_Price[key],1)
		
		G_Info[1][id] -= Weapons_Price[G_Last[id][G_Info[0][id]-2]]
		G_Info[1][id] += Weapons_Price[key]
		G_Last[id][G_Info[0][id]-2] = key
		Give_Item(id,key)
	}
	else
	{
		client_print(id,print_chat,"[Gun Menu]Not enough cash to buy %s",Weapons_Info[0][key])
		G_Info[0][id] -= 1
	}
	
	menu_destroy(menu)
	if(G_Info[0][id] != 5)Show_Menu(id)
}

//our strip/give function
public Give_Item(id,key)
{	
	if(get_pcvar_num(P_Cvars[key]) != 1)
	{
		client_print(id,print_chat,"[Gun Menu]Sry %s has been restricted by admin",Weapons_Info[0][key])
		fm_set_user_money(id,get_pdata_int(id,OFFSET_CSMONEY,5)+Weapons_Price[key],0)
		return
	}
	
	new weapons[2]
	Player_Guns(id,weapons)
	switch(key)
	{
		case 1..18:if(weapons[0] != 0)fm_strip_user_gun( id, weapons[0])
		case 19..24:if(weapons[1] != 0)fm_strip_user_gun( id, weapons[1])
	}
	if(Weapons_Info[1][key][9] == 108)
	{
		fm_give_item(id,"weapon_flashbang")
		fm_give_item(id,"weapon_smokegrenade")
		fm_give_item(id,"weapon_hegrenade")
	}
	else fm_give_item(id,Weapons_Info[1][key])
	if(Weapons_Info[2][key][0] != 0)
	{
		fm_give_item(id,Weapons_Info[2][key])
		fm_give_item(id,Weapons_Info[2][key])
		fm_give_item(id,Weapons_Info[2][key])
	}
}

//rebuy function
public ReBuy(id)
{
	new Cash = get_pdata_int(id,OFFSET_CSMONEY,5)+Weapons_Price[0]
	if(Cash >= G_Info[1][id]) fm_set_user_money(id,Cash-G_Info[1][id],1)
	else
	{
		G_Info[0][id] = 1
		Show_Menu(id)
		client_print(id,print_chat,"[Gun Menu]Not enugh cash")
		Auto_Rebuy[id] = 0
		return
	}
	if(!G_Last[id][0] && !G_Last[id][1] && G_Last[id][2] == 0 && G_Last[id][3] == 0)
	{
		client_print(id,print_chat,"[Gun Menu]You didn't buy any guns last time.")
		G_Info[0][id] = 1
		Auto_Rebuy[id] = 0
		Show_Menu(id)
	}
	else
	{
		for (new i=0; i<4; i++)if(G_Last[id][i] != 0)Give_Item(id,G_Last[id][i])	
		
		if(Auto_Rebuy[id])client_print(id,print_chat,"[Gun Menu]Say /guns to enable buying agin")
	}
}

//reset his page to 0 so he can open the menu agin
public Reset()
{
	new id=read_data(2)
	if(id != 0)
	{
		client_cmd(id, "menuselect 10 1")
		G_Info[0][id] = 0
	}
	else
	{
		for(new i = 1;i<=MaxPlayers;i++)if(is_user_connected(i))client_cmd(i, "menuselect 10 1")
		arrayset(G_Info[0], 0, 32)
	}
}

/////////////////////
//	Stocks	   //
/////////////////////
stock Player_Guns(id,weapons[2])
{
	new guns[32]
	new numWeapons, i, weapon 
	get_user_weapons(id, guns, numWeapons) 
	for (i=0; i<numWeapons; i++) 
	{ 
		weapon = guns[i] 
		switch(weapon)
		{
			case 3,5,7,8,12,15,18..24,27,28,30:weapons[0]=weapon
			case 1,10,11,16,17,26:weapons[1]=weapon
		}
	} 
	return weapons
}
//frome Fakemeta Utility
stock fm_give_item(index, const item[])
{
	if (!equal(item, "weapon_", 7) && !equal(item, "ammo_", 5) && !equal(item, "item_", 5) && !equal(item, "tf_weapon_", 10))return 0
	
	new ent = engfunc(EngFunc_CreateNamedEntity, engfunc(EngFunc_AllocString, item))
	if (!pev_valid(ent))return 0
	
	new Float:origin[3]
	pev(index, pev_origin, origin)
	set_pev(ent, pev_origin, origin)
	set_pev(ent, pev_spawnflags, pev(ent, pev_spawnflags) | SF_NORESPAWN)
	dllfunc(DLLFunc_Spawn, ent)
	
	new save = pev(ent, pev_solid)
	dllfunc(DLLFunc_Touch, ent, index)
	if (pev(ent, pev_solid) != save)return ent
	
	engfunc(EngFunc_RemoveEntity, ent)
	
	return -1
}
stock bool:fm_strip_user_gun(index, wid = 0, const wname[] = "")
{
	new ent_class[32]
	if (!wid && wname[0])copy(ent_class, sizeof ent_class - 1, wname)
	else
	{
		new weapon = wid, clip, ammo
		if (!weapon && !(weapon = get_user_weapon(index, clip, ammo)))return false
		
		get_weaponname(weapon, ent_class, sizeof ent_class - 1)
	}
	
	new ent_weap = fm_find_ent_by_owner(-1, ent_class, index)
	if (!ent_weap)return false
	
	engclient_cmd(index, "drop", ent_class)
	
	new ent_box = pev(ent_weap, pev_owner)
	if (!ent_box || ent_box == index)return false
	
	dllfunc(DLLFunc_Think, ent_box)
	
	return true
}
stock fm_find_ent_by_owner(index, const classname[], owner, jghgtype = 0)
{
	new strtype[11] = "classname", ent = index
	switch (jghgtype)
	{
		case 1: strtype = "target"
		case 2: strtype = "targetname"
	}
	
	while ((ent = engfunc(EngFunc_FindEntityByString, ent, strtype, classname)) && pev(ent, pev_owner) != owner) {}
	return ent
}

//XxAvalanchexX 
stock fm_set_user_money(id,money,flash=1)
{
	set_pdata_int(id,OFFSET_CSMONEY,money,5)
	message_begin(MSG_ONE,get_user_msgid("Money"),{0,0,0},id)
	write_long(money)
	write_byte(flash)
	message_end()
}


/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang1033\\ f0\\ fs16 \n\\ par }
*/
