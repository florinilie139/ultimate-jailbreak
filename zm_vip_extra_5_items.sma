/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <hamsandwich>
#include <fakemeta>
#include <zombie_plague_advance>
#include <zmvip>

#define PLUGIN "Some Items Extra"
#define VERSION "1.0"
#define AUTHOR "[R]ak"

#define is_valid_user(%1)	((1 <= %1 <= g_maxplayers) && g_isconnected[%1])

new item_vida, item_damage, item_teleport, item_nemesis, item_survivor

new g_hasdamage[33], g_tporigin[33][3], g_isconnected[33], g_maxplayers

const health_cost = 12

const damage_cost = 25

const teleport_cost = 24

const nemesis_cost = 60

const survivor_cost = 80

public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR)
	
	item_vida = zp_register_extra_item("Health(H +150 | Z +1500)", health_cost, ZP_TEAM_ANY)
	item_damage = zp_register_extra_item("Damage Selection(1 Round)", damage_cost, ZP_TEAM_HUMAN)
	item_teleport = zp_register_extra_item("Teleport", teleport_cost, ZP_TEAM_HUMAN)
	item_nemesis = zp_register_extra_item("Nemesis", nemesis_cost, ZP_TEAM_ANY)
	item_survivor = zp_register_extra_item("Survivor", survivor_cost, ZP_TEAM_ANY)
	
	RegisterHam(Ham_Spawn, "player", "fw_PlayerSpawn_Post", 1)
	RegisterHam(Ham_TakeDamage, "player", "fw_TakeDamage")
	
	register_event("HLTV", "event_round_start", "a", "1=0", "2=0")
	
	g_maxplayers = get_maxplayers()
}

public fw_PlayerSpawn_Post(id) {
	
	if(!is_user_alive(id))
		return
	
	pev(id, pev_origin, g_tporigin[id])
	
}

public fw_TakeDamage(victim, inflictor, attacker)
	if(is_valid_user(attacker) && is_valid_user(victim) &&  g_hasdamage[attacker])
		SetHamParamFloat(4, 175.0)

public event_round_start()
	arrayset(g_hasdamage, false, 33)

public client_putinserver(id) {
	g_isconnected[id] = true
	g_hasdamage[id] = false
}

public client_disconnect(id) {
	g_isconnected[id] = false
	g_hasdamage[id] = false
}

public zp_extra_item_selected(id, itemid) {
	
	if(itemid == item_vida)
		set_pev(id, pev_health, float(pev(id, pev_health)+(zp_get_user_zombie(id) ? 1500 : 150)))
	else if(itemid == item_damage)
		g_hasdamage[id] = true 
	else if(itemid == item_teleport) {
		new done, i, hull = (pev(id, pev_flags) & FL_DUCKING) ? HULL_HEAD : HULL_HUMAN
		while(!done) {
			i = random_num(1, 32)
		
			if(!g_tporigin[i][0] || !is_hull_vacant(Float:g_tporigin[i], hull))
				continue;
			
			set_pev(id, pev_origin, g_tporigin[i])
			done++
		}
	}
	else if(itemid == item_nemesis)
		zp_make_user_nemesis(id)
	else if(itemid == item_survivor)
		zp_make_user_survivor(id)	
}

stock is_hull_vacant(Float:origin[3], hull) {
	engfunc(EngFunc_TraceHull, origin, origin, 0, hull, 0, 0)

	if (!get_tr2(0, TR_StartSolid) && !get_tr2(0, TR_AllSolid) && get_tr2(0, TR_InOpen))
		return true;

	return false;
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang1034\\ f0\\ fs16 \n\\ par }
*/
